// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: hatchery.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Hatchery {

  /// <summary>Holder for reflection information generated from hatchery.proto</summary>
  public static partial class HatcheryReflection {

    #region Descriptor
    /// <summary>File descriptor for hatchery.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HatcheryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5oYXRjaGVyeS5wcm90bxIIaGF0Y2hlcnkaCnVzZXIucHJvdG8itQEKClBs",
            "YXllckluZm8SCwoDdWlkGAEgASgDEgsKA2FpZBgCIAEoBRIMCgRuYW1lGAMg",
            "ASgJEg0KBWxldmVsGAQgASgFEg8KB2NyeXN0YWwYBSABKAUSDAoEY29pbhgG",
            "IAEoBRIPCgdkaWFtb25kGAcgASgFEiQKCHNsb3RMaXN0GAggAygLMhIudXNl",
            "ci5FcXVpcEVsZlNsb3QSGgoHZWxmTGlzdBgJIAMoCzIJLnVzZXIuRWxmInIK",
            "FENyZWF0ZUJhdHRsZUZpZWxkUmVxEiUKB3BsYXllcnMYASADKAsyFC5oYXRj",
            "aGVyeS5QbGF5ZXJJbmZvEg8KB2FyZW5hSWQYAiABKAUSEAoIYXJlbmFQb3MY",
            "AyABKAUSEAoIYmlydGhQb3MYBCABKAUiRAoVQ3JlYXRlQmF0dGxlRmllbGRS",
            "ZXNwEgsKA3JldBgBIAEoBRIMCgRzZWVkGAIgASgDEhAKCGJhdHRsZUlkGAMg",
            "ASgFIiYKElJlY29ubmVjdEJhdHRsZVJlcRIQCghiYXR0bGVJZBgBIAEoBSJX",
            "ChNSZWNvbm5lY3RCYXR0bGVSZXNwEgsKA3JldBgBIAEoBRIPCgdhcmVuYUlk",
            "GAIgASgFEhAKCGFyZW5hUG9zGAMgASgFEhAKCGJpcnRoUG9zGAQgASgFIlMK",
            "EkluaXRCYXR0bGVGaWVsZFJlcRIrCgNyZXEYASABKAsyHi5oYXRjaGVyeS5D",
            "cmVhdGVCYXR0bGVGaWVsZFJlcRIQCghiYXR0bGVJZBgCIAEoBSJCChNJbml0",
            "QmF0dGxlRmllbGRSZXNwEgsKA3JldBgBIAEoBRIMCgRzZWVkGAIgASgDEhAK",
            "CGJhdHRsZUlkGAMgASgFIiYKEVJlbW92ZUJhdHRsZUZpZWxkEhEKCXNlcnZp",
            "Y2VJZBgBIAEoBSJpChBFbnRlckJhdHRsZUZpZWxkEgsKA3VpZBgBIAEoAxIL",
            "CgNhaWQYAiABKAUSFAoMY29ubmVjdGlvbklkGAMgASgDEhAKCGJhdHRsZUlk",
            "GAQgASgFEhMKC3RjcE9iamVjdElkGAUgASgFIjoKFURpc2Nvbm5lY3RCYXR0",
            "bGVGaWVsZBIUCgxjb25uZWN0aW9uSWQYASABKAMSCwoDYWlkGAIgASgFIiQK",
            "A1JQQxIOCgZtZXRob2QYASABKAkSDQoFcGFyYW0YAiABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::proto.user.UserReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Hatchery.PlayerInfo), global::Hatchery.PlayerInfo.Parser, new[]{ "Uid", "Aid", "Name", "Level", "Crystal", "Coin", "Diamond", "SlotList", "ElfList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hatchery.CreateBattleFieldReq), global::Hatchery.CreateBattleFieldReq.Parser, new[]{ "Players", "ArenaId", "ArenaPos", "BirthPos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hatchery.CreateBattleFieldResp), global::Hatchery.CreateBattleFieldResp.Parser, new[]{ "Ret", "Seed", "BattleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hatchery.ReconnectBattleReq), global::Hatchery.ReconnectBattleReq.Parser, new[]{ "BattleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hatchery.ReconnectBattleResp), global::Hatchery.ReconnectBattleResp.Parser, new[]{ "Ret", "ArenaId", "ArenaPos", "BirthPos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hatchery.InitBattleFieldReq), global::Hatchery.InitBattleFieldReq.Parser, new[]{ "Req", "BattleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hatchery.InitBattleFieldResp), global::Hatchery.InitBattleFieldResp.Parser, new[]{ "Ret", "Seed", "BattleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hatchery.RemoveBattleField), global::Hatchery.RemoveBattleField.Parser, new[]{ "ServiceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hatchery.EnterBattleField), global::Hatchery.EnterBattleField.Parser, new[]{ "Uid", "Aid", "ConnectionId", "BattleId", "TcpObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hatchery.DisconnectBattleField), global::Hatchery.DisconnectBattleField.Parser, new[]{ "ConnectionId", "Aid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hatchery.RPC), global::Hatchery.RPC.Parser, new[]{ "Method", "Param" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hatchery.HatcheryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo(PlayerInfo other) : this() {
      uid_ = other.uid_;
      aid_ = other.aid_;
      name_ = other.name_;
      level_ = other.level_;
      crystal_ = other.crystal_;
      coin_ = other.coin_;
      diamond_ = other.diamond_;
      slotList_ = other.slotList_.Clone();
      elfList_ = other.elfList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo Clone() {
      return new PlayerInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "aid" field.</summary>
    public const int AidFieldNumber = 2;
    private int aid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Aid {
      get { return aid_; }
      set {
        aid_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 4;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "crystal" field.</summary>
    public const int CrystalFieldNumber = 5;
    private int crystal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Crystal {
      get { return crystal_; }
      set {
        crystal_ = value;
      }
    }

    /// <summary>Field number for the "coin" field.</summary>
    public const int CoinFieldNumber = 6;
    private int coin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Coin {
      get { return coin_; }
      set {
        coin_ = value;
      }
    }

    /// <summary>Field number for the "diamond" field.</summary>
    public const int DiamondFieldNumber = 7;
    private int diamond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diamond {
      get { return diamond_; }
      set {
        diamond_ = value;
      }
    }

    /// <summary>Field number for the "slotList" field.</summary>
    public const int SlotListFieldNumber = 8;
    private static readonly pb::FieldCodec<global::proto.user.EquipElfSlot> _repeated_slotList_codec
        = pb::FieldCodec.ForMessage(66, global::proto.user.EquipElfSlot.Parser);
    private readonly pbc::RepeatedField<global::proto.user.EquipElfSlot> slotList_ = new pbc::RepeatedField<global::proto.user.EquipElfSlot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::proto.user.EquipElfSlot> SlotList {
      get { return slotList_; }
    }

    /// <summary>Field number for the "elfList" field.</summary>
    public const int ElfListFieldNumber = 9;
    private static readonly pb::FieldCodec<global::proto.user.Elf> _repeated_elfList_codec
        = pb::FieldCodec.ForMessage(74, global::proto.user.Elf.Parser);
    private readonly pbc::RepeatedField<global::proto.user.Elf> elfList_ = new pbc::RepeatedField<global::proto.user.Elf>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::proto.user.Elf> ElfList {
      get { return elfList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Aid != other.Aid) return false;
      if (Name != other.Name) return false;
      if (Level != other.Level) return false;
      if (Crystal != other.Crystal) return false;
      if (Coin != other.Coin) return false;
      if (Diamond != other.Diamond) return false;
      if(!slotList_.Equals(other.slotList_)) return false;
      if(!elfList_.Equals(other.elfList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0L) hash ^= Uid.GetHashCode();
      if (Aid != 0) hash ^= Aid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Crystal != 0) hash ^= Crystal.GetHashCode();
      if (Coin != 0) hash ^= Coin.GetHashCode();
      if (Diamond != 0) hash ^= Diamond.GetHashCode();
      hash ^= slotList_.GetHashCode();
      hash ^= elfList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (Aid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Aid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Level);
      }
      if (Crystal != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Crystal);
      }
      if (Coin != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Coin);
      }
      if (Diamond != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Diamond);
      }
      slotList_.WriteTo(output, _repeated_slotList_codec);
      elfList_.WriteTo(output, _repeated_elfList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (Aid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Aid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Level);
      }
      if (Crystal != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Crystal);
      }
      if (Coin != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Coin);
      }
      if (Diamond != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Diamond);
      }
      slotList_.WriteTo(ref output, _repeated_slotList_codec);
      elfList_.WriteTo(ref output, _repeated_elfList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (Aid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Aid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Crystal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Crystal);
      }
      if (Coin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Coin);
      }
      if (Diamond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diamond);
      }
      size += slotList_.CalculateSize(_repeated_slotList_codec);
      size += elfList_.CalculateSize(_repeated_elfList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0L) {
        Uid = other.Uid;
      }
      if (other.Aid != 0) {
        Aid = other.Aid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Crystal != 0) {
        Crystal = other.Crystal;
      }
      if (other.Coin != 0) {
        Coin = other.Coin;
      }
      if (other.Diamond != 0) {
        Diamond = other.Diamond;
      }
      slotList_.Add(other.slotList_);
      elfList_.Add(other.elfList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Aid = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
          case 40: {
            Crystal = input.ReadInt32();
            break;
          }
          case 48: {
            Coin = input.ReadInt32();
            break;
          }
          case 56: {
            Diamond = input.ReadInt32();
            break;
          }
          case 66: {
            slotList_.AddEntriesFrom(input, _repeated_slotList_codec);
            break;
          }
          case 74: {
            elfList_.AddEntriesFrom(input, _repeated_elfList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Aid = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
          case 40: {
            Crystal = input.ReadInt32();
            break;
          }
          case 48: {
            Coin = input.ReadInt32();
            break;
          }
          case 56: {
            Diamond = input.ReadInt32();
            break;
          }
          case 66: {
            slotList_.AddEntriesFrom(ref input, _repeated_slotList_codec);
            break;
          }
          case 74: {
            elfList_.AddEntriesFrom(ref input, _repeated_elfList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateBattleFieldReq : pb::IMessage<CreateBattleFieldReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateBattleFieldReq> _parser = new pb::MessageParser<CreateBattleFieldReq>(() => new CreateBattleFieldReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateBattleFieldReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hatchery.HatcheryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBattleFieldReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBattleFieldReq(CreateBattleFieldReq other) : this() {
      players_ = other.players_.Clone();
      arenaId_ = other.arenaId_;
      arenaPos_ = other.arenaPos_;
      birthPos_ = other.birthPos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBattleFieldReq Clone() {
      return new CreateBattleFieldReq(this);
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Hatchery.PlayerInfo> _repeated_players_codec
        = pb::FieldCodec.ForMessage(10, global::Hatchery.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Hatchery.PlayerInfo> players_ = new pbc::RepeatedField<global::Hatchery.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Hatchery.PlayerInfo> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "arenaId" field.</summary>
    public const int ArenaIdFieldNumber = 2;
    private int arenaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ArenaId {
      get { return arenaId_; }
      set {
        arenaId_ = value;
      }
    }

    /// <summary>Field number for the "arenaPos" field.</summary>
    public const int ArenaPosFieldNumber = 3;
    private int arenaPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ArenaPos {
      get { return arenaPos_; }
      set {
        arenaPos_ = value;
      }
    }

    /// <summary>Field number for the "birthPos" field.</summary>
    public const int BirthPosFieldNumber = 4;
    private int birthPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BirthPos {
      get { return birthPos_; }
      set {
        birthPos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateBattleFieldReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateBattleFieldReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!players_.Equals(other.players_)) return false;
      if (ArenaId != other.ArenaId) return false;
      if (ArenaPos != other.ArenaPos) return false;
      if (BirthPos != other.BirthPos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= players_.GetHashCode();
      if (ArenaId != 0) hash ^= ArenaId.GetHashCode();
      if (ArenaPos != 0) hash ^= ArenaPos.GetHashCode();
      if (BirthPos != 0) hash ^= BirthPos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      players_.WriteTo(output, _repeated_players_codec);
      if (ArenaId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArenaId);
      }
      if (ArenaPos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ArenaPos);
      }
      if (BirthPos != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BirthPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      players_.WriteTo(ref output, _repeated_players_codec);
      if (ArenaId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArenaId);
      }
      if (ArenaPos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ArenaPos);
      }
      if (BirthPos != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BirthPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += players_.CalculateSize(_repeated_players_codec);
      if (ArenaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArenaId);
      }
      if (ArenaPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArenaPos);
      }
      if (BirthPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BirthPos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateBattleFieldReq other) {
      if (other == null) {
        return;
      }
      players_.Add(other.players_);
      if (other.ArenaId != 0) {
        ArenaId = other.ArenaId;
      }
      if (other.ArenaPos != 0) {
        ArenaPos = other.ArenaPos;
      }
      if (other.BirthPos != 0) {
        BirthPos = other.BirthPos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 16: {
            ArenaId = input.ReadInt32();
            break;
          }
          case 24: {
            ArenaPos = input.ReadInt32();
            break;
          }
          case 32: {
            BirthPos = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 16: {
            ArenaId = input.ReadInt32();
            break;
          }
          case 24: {
            ArenaPos = input.ReadInt32();
            break;
          }
          case 32: {
            BirthPos = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateBattleFieldResp : pb::IMessage<CreateBattleFieldResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateBattleFieldResp> _parser = new pb::MessageParser<CreateBattleFieldResp>(() => new CreateBattleFieldResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateBattleFieldResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hatchery.HatcheryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBattleFieldResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBattleFieldResp(CreateBattleFieldResp other) : this() {
      ret_ = other.ret_;
      seed_ = other.seed_;
      battleId_ = other.battleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBattleFieldResp Clone() {
      return new CreateBattleFieldResp(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 2;
    private long seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    /// <summary>Field number for the "battleId" field.</summary>
    public const int BattleIdFieldNumber = 3;
    private int battleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BattleId {
      get { return battleId_; }
      set {
        battleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateBattleFieldResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateBattleFieldResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (Seed != other.Seed) return false;
      if (BattleId != other.BattleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (Seed != 0L) hash ^= Seed.GetHashCode();
      if (BattleId != 0) hash ^= BattleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (Seed != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Seed);
      }
      if (BattleId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BattleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (Seed != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Seed);
      }
      if (BattleId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BattleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ret);
      }
      if (Seed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Seed);
      }
      if (BattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateBattleFieldResp other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.Seed != 0L) {
        Seed = other.Seed;
      }
      if (other.BattleId != 0) {
        BattleId = other.BattleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
          case 16: {
            Seed = input.ReadInt64();
            break;
          }
          case 24: {
            BattleId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
          case 16: {
            Seed = input.ReadInt64();
            break;
          }
          case 24: {
            BattleId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReconnectBattleReq : pb::IMessage<ReconnectBattleReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReconnectBattleReq> _parser = new pb::MessageParser<ReconnectBattleReq>(() => new ReconnectBattleReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReconnectBattleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hatchery.HatcheryReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectBattleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectBattleReq(ReconnectBattleReq other) : this() {
      battleId_ = other.battleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectBattleReq Clone() {
      return new ReconnectBattleReq(this);
    }

    /// <summary>Field number for the "battleId" field.</summary>
    public const int BattleIdFieldNumber = 1;
    private int battleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BattleId {
      get { return battleId_; }
      set {
        battleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReconnectBattleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReconnectBattleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BattleId != other.BattleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BattleId != 0) hash ^= BattleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BattleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BattleId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BattleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReconnectBattleReq other) {
      if (other == null) {
        return;
      }
      if (other.BattleId != 0) {
        BattleId = other.BattleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BattleId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BattleId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReconnectBattleResp : pb::IMessage<ReconnectBattleResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReconnectBattleResp> _parser = new pb::MessageParser<ReconnectBattleResp>(() => new ReconnectBattleResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReconnectBattleResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hatchery.HatcheryReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectBattleResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectBattleResp(ReconnectBattleResp other) : this() {
      ret_ = other.ret_;
      arenaId_ = other.arenaId_;
      arenaPos_ = other.arenaPos_;
      birthPos_ = other.birthPos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectBattleResp Clone() {
      return new ReconnectBattleResp(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "arenaId" field.</summary>
    public const int ArenaIdFieldNumber = 2;
    private int arenaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ArenaId {
      get { return arenaId_; }
      set {
        arenaId_ = value;
      }
    }

    /// <summary>Field number for the "arenaPos" field.</summary>
    public const int ArenaPosFieldNumber = 3;
    private int arenaPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ArenaPos {
      get { return arenaPos_; }
      set {
        arenaPos_ = value;
      }
    }

    /// <summary>Field number for the "birthPos" field.</summary>
    public const int BirthPosFieldNumber = 4;
    private int birthPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BirthPos {
      get { return birthPos_; }
      set {
        birthPos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReconnectBattleResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReconnectBattleResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (ArenaId != other.ArenaId) return false;
      if (ArenaPos != other.ArenaPos) return false;
      if (BirthPos != other.BirthPos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (ArenaId != 0) hash ^= ArenaId.GetHashCode();
      if (ArenaPos != 0) hash ^= ArenaPos.GetHashCode();
      if (BirthPos != 0) hash ^= BirthPos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (ArenaId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArenaId);
      }
      if (ArenaPos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ArenaPos);
      }
      if (BirthPos != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BirthPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (ArenaId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArenaId);
      }
      if (ArenaPos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ArenaPos);
      }
      if (BirthPos != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BirthPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ret);
      }
      if (ArenaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArenaId);
      }
      if (ArenaPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArenaPos);
      }
      if (BirthPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BirthPos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReconnectBattleResp other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.ArenaId != 0) {
        ArenaId = other.ArenaId;
      }
      if (other.ArenaPos != 0) {
        ArenaPos = other.ArenaPos;
      }
      if (other.BirthPos != 0) {
        BirthPos = other.BirthPos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
          case 16: {
            ArenaId = input.ReadInt32();
            break;
          }
          case 24: {
            ArenaPos = input.ReadInt32();
            break;
          }
          case 32: {
            BirthPos = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
          case 16: {
            ArenaId = input.ReadInt32();
            break;
          }
          case 24: {
            ArenaPos = input.ReadInt32();
            break;
          }
          case 32: {
            BirthPos = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InitBattleFieldReq : pb::IMessage<InitBattleFieldReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitBattleFieldReq> _parser = new pb::MessageParser<InitBattleFieldReq>(() => new InitBattleFieldReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitBattleFieldReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hatchery.HatcheryReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitBattleFieldReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitBattleFieldReq(InitBattleFieldReq other) : this() {
      req_ = other.req_ != null ? other.req_.Clone() : null;
      battleId_ = other.battleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitBattleFieldReq Clone() {
      return new InitBattleFieldReq(this);
    }

    /// <summary>Field number for the "req" field.</summary>
    public const int ReqFieldNumber = 1;
    private global::Hatchery.CreateBattleFieldReq req_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Hatchery.CreateBattleFieldReq Req {
      get { return req_; }
      set {
        req_ = value;
      }
    }

    /// <summary>Field number for the "battleId" field.</summary>
    public const int BattleIdFieldNumber = 2;
    private int battleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BattleId {
      get { return battleId_; }
      set {
        battleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitBattleFieldReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitBattleFieldReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Req, other.Req)) return false;
      if (BattleId != other.BattleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (req_ != null) hash ^= Req.GetHashCode();
      if (BattleId != 0) hash ^= BattleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (req_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Req);
      }
      if (BattleId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BattleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (req_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Req);
      }
      if (BattleId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BattleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (req_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Req);
      }
      if (BattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitBattleFieldReq other) {
      if (other == null) {
        return;
      }
      if (other.req_ != null) {
        if (req_ == null) {
          Req = new global::Hatchery.CreateBattleFieldReq();
        }
        Req.MergeFrom(other.Req);
      }
      if (other.BattleId != 0) {
        BattleId = other.BattleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (req_ == null) {
              Req = new global::Hatchery.CreateBattleFieldReq();
            }
            input.ReadMessage(Req);
            break;
          }
          case 16: {
            BattleId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (req_ == null) {
              Req = new global::Hatchery.CreateBattleFieldReq();
            }
            input.ReadMessage(Req);
            break;
          }
          case 16: {
            BattleId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InitBattleFieldResp : pb::IMessage<InitBattleFieldResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitBattleFieldResp> _parser = new pb::MessageParser<InitBattleFieldResp>(() => new InitBattleFieldResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitBattleFieldResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hatchery.HatcheryReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitBattleFieldResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitBattleFieldResp(InitBattleFieldResp other) : this() {
      ret_ = other.ret_;
      seed_ = other.seed_;
      battleId_ = other.battleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitBattleFieldResp Clone() {
      return new InitBattleFieldResp(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 2;
    private long seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    /// <summary>Field number for the "battleId" field.</summary>
    public const int BattleIdFieldNumber = 3;
    private int battleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BattleId {
      get { return battleId_; }
      set {
        battleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitBattleFieldResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitBattleFieldResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (Seed != other.Seed) return false;
      if (BattleId != other.BattleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (Seed != 0L) hash ^= Seed.GetHashCode();
      if (BattleId != 0) hash ^= BattleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (Seed != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Seed);
      }
      if (BattleId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BattleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (Seed != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Seed);
      }
      if (BattleId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BattleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ret);
      }
      if (Seed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Seed);
      }
      if (BattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitBattleFieldResp other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.Seed != 0L) {
        Seed = other.Seed;
      }
      if (other.BattleId != 0) {
        BattleId = other.BattleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
          case 16: {
            Seed = input.ReadInt64();
            break;
          }
          case 24: {
            BattleId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
          case 16: {
            Seed = input.ReadInt64();
            break;
          }
          case 24: {
            BattleId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RemoveBattleField : pb::IMessage<RemoveBattleField>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoveBattleField> _parser = new pb::MessageParser<RemoveBattleField>(() => new RemoveBattleField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveBattleField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hatchery.HatcheryReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBattleField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBattleField(RemoveBattleField other) : this() {
      serviceId_ = other.serviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBattleField Clone() {
      return new RemoveBattleField(this);
    }

    /// <summary>Field number for the "serviceId" field.</summary>
    public const int ServiceIdFieldNumber = 1;
    private int serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveBattleField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveBattleField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceId != other.ServiceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceId != 0) hash ^= ServiceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ServiceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServiceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ServiceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServiceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServiceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveBattleField other) {
      if (other == null) {
        return;
      }
      if (other.ServiceId != 0) {
        ServiceId = other.ServiceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServiceId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ServiceId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnterBattleField : pb::IMessage<EnterBattleField>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnterBattleField> _parser = new pb::MessageParser<EnterBattleField>(() => new EnterBattleField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterBattleField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hatchery.HatcheryReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterBattleField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterBattleField(EnterBattleField other) : this() {
      uid_ = other.uid_;
      aid_ = other.aid_;
      connectionId_ = other.connectionId_;
      battleId_ = other.battleId_;
      tcpObjectId_ = other.tcpObjectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterBattleField Clone() {
      return new EnterBattleField(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "aid" field.</summary>
    public const int AidFieldNumber = 2;
    private int aid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Aid {
      get { return aid_; }
      set {
        aid_ = value;
      }
    }

    /// <summary>Field number for the "connectionId" field.</summary>
    public const int ConnectionIdFieldNumber = 3;
    private long connectionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = value;
      }
    }

    /// <summary>Field number for the "battleId" field.</summary>
    public const int BattleIdFieldNumber = 4;
    private int battleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BattleId {
      get { return battleId_; }
      set {
        battleId_ = value;
      }
    }

    /// <summary>Field number for the "tcpObjectId" field.</summary>
    public const int TcpObjectIdFieldNumber = 5;
    private int tcpObjectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TcpObjectId {
      get { return tcpObjectId_; }
      set {
        tcpObjectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterBattleField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterBattleField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Aid != other.Aid) return false;
      if (ConnectionId != other.ConnectionId) return false;
      if (BattleId != other.BattleId) return false;
      if (TcpObjectId != other.TcpObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0L) hash ^= Uid.GetHashCode();
      if (Aid != 0) hash ^= Aid.GetHashCode();
      if (ConnectionId != 0L) hash ^= ConnectionId.GetHashCode();
      if (BattleId != 0) hash ^= BattleId.GetHashCode();
      if (TcpObjectId != 0) hash ^= TcpObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (Aid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Aid);
      }
      if (ConnectionId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ConnectionId);
      }
      if (BattleId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BattleId);
      }
      if (TcpObjectId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TcpObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (Aid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Aid);
      }
      if (ConnectionId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ConnectionId);
      }
      if (BattleId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BattleId);
      }
      if (TcpObjectId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TcpObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (Aid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Aid);
      }
      if (ConnectionId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConnectionId);
      }
      if (BattleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleId);
      }
      if (TcpObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TcpObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterBattleField other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0L) {
        Uid = other.Uid;
      }
      if (other.Aid != 0) {
        Aid = other.Aid;
      }
      if (other.ConnectionId != 0L) {
        ConnectionId = other.ConnectionId;
      }
      if (other.BattleId != 0) {
        BattleId = other.BattleId;
      }
      if (other.TcpObjectId != 0) {
        TcpObjectId = other.TcpObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Aid = input.ReadInt32();
            break;
          }
          case 24: {
            ConnectionId = input.ReadInt64();
            break;
          }
          case 32: {
            BattleId = input.ReadInt32();
            break;
          }
          case 40: {
            TcpObjectId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Aid = input.ReadInt32();
            break;
          }
          case 24: {
            ConnectionId = input.ReadInt64();
            break;
          }
          case 32: {
            BattleId = input.ReadInt32();
            break;
          }
          case 40: {
            TcpObjectId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DisconnectBattleField : pb::IMessage<DisconnectBattleField>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisconnectBattleField> _parser = new pb::MessageParser<DisconnectBattleField>(() => new DisconnectBattleField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisconnectBattleField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hatchery.HatcheryReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectBattleField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectBattleField(DisconnectBattleField other) : this() {
      connectionId_ = other.connectionId_;
      aid_ = other.aid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectBattleField Clone() {
      return new DisconnectBattleField(this);
    }

    /// <summary>Field number for the "connectionId" field.</summary>
    public const int ConnectionIdFieldNumber = 1;
    private long connectionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = value;
      }
    }

    /// <summary>Field number for the "aid" field.</summary>
    public const int AidFieldNumber = 2;
    private int aid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Aid {
      get { return aid_; }
      set {
        aid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisconnectBattleField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisconnectBattleField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnectionId != other.ConnectionId) return false;
      if (Aid != other.Aid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConnectionId != 0L) hash ^= ConnectionId.GetHashCode();
      if (Aid != 0) hash ^= Aid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ConnectionId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ConnectionId);
      }
      if (Aid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Aid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ConnectionId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ConnectionId);
      }
      if (Aid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Aid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConnectionId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConnectionId);
      }
      if (Aid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Aid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisconnectBattleField other) {
      if (other == null) {
        return;
      }
      if (other.ConnectionId != 0L) {
        ConnectionId = other.ConnectionId;
      }
      if (other.Aid != 0) {
        Aid = other.Aid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConnectionId = input.ReadInt64();
            break;
          }
          case 16: {
            Aid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ConnectionId = input.ReadInt64();
            break;
          }
          case 16: {
            Aid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RPC : pb::IMessage<RPC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RPC> _parser = new pb::MessageParser<RPC>(() => new RPC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RPC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hatchery.HatcheryReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPC(RPC other) : this() {
      method_ = other.method_;
      param_ = other.param_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPC Clone() {
      return new RPC(this);
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 1;
    private string method_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "param" field.</summary>
    public const int ParamFieldNumber = 2;
    private string param_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Param {
      get { return param_; }
      set {
        param_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RPC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RPC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Method != other.Method) return false;
      if (Param != other.Param) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (Param.Length != 0) hash ^= Param.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Method.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Method);
      }
      if (Param.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Param);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Method.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Method);
      }
      if (Param.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Param);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (Param.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Param);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RPC other) {
      if (other == null) {
        return;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.Param.Length != 0) {
        Param = other.Param;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Method = input.ReadString();
            break;
          }
          case 18: {
            Param = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Method = input.ReadString();
            break;
          }
          case 18: {
            Param = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
